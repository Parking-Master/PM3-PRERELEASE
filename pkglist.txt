{
  "1.0.0": {},
  "1.1.0": {
    "update": true,
    "description": "Fixed urgent bugs, updated for pre beta-release",
    "version": "2.1.0",
    "filesToEdit": true,
    "filesToAdd": false,
    "urgent": true,
    "editedFiles": ["main.js"],
    "addedFiles": [],
    "editSummary": {
      "main.js": ""
    }
  }
}
