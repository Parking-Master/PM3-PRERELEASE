{
  "update": true,
  "description": "Added new redirect features for app, upgrade security",
  "version": "1.1.0",
  "filesToEdit": true,
  "filesToAdd": false,
  "urgent": true,
  "editedFiles": ["main.js"],
  "addedFiles": [],
  "editSummary": {
    "main.js": "Y29uc3QgeyBOb3RpZmljYXRpb24sIEJyb3dzZXJXaW5kb3csIGFwcCwgTWVudSwgc2hlbGwsIGRpYWxvZyB9ID0gcmVxdWlyZSgiZWxlY3Ryb24iKTsNCmNvbnN0IGJ0b2EgPSByZXF1aXJlKCJidG9hIik7DQpjb25zdCBwYXRoID0gcmVxdWlyZSgicGF0aCIpOw0KY29uc3Qgcm9vdFBhdGggPSByZXF1aXJlKCJlbGVjdHJvbi1yb290LXBhdGgiKS5yb290UGF0aDsNCmNvbnN0IGxvY2F0aW9uID0gcGF0aC5qb2luKHJvb3RQYXRoLCAicGFja2FnZS5qc29uIik7DQpjb25zdCBmcyA9IHJlcXVpcmUoImZzIik7DQpjb25zdCBuYXRpdmVUaGVtZSA9IHJlcXVpcmUoImVsZWN0cm9uIikubmF0aXZlVGhlbWU7DQpjb25zdCB7IG1vdmVUb0FwcGxpY2F0aW9ucyB9ID0gcmVxdWlyZSgiZWxlY3Ryb24tbGV0cy1tb3ZlIik7DQpjb25zdCB7IHVzZXJJbmZvIH0gPSByZXF1aXJlKCJvcyIpOw0KY29uc3QgZXhlYyA9IHJlcXVpcmUoImNoaWxkX3Byb2Nlc3MiKS5leGVjOw0KY29uc3QgaHR0cCA9IHJlcXVpcmUoImh0dHBzIik7DQpjb25zdCBhdG9iID0gcmVxdWlyZSgiYXRvYiIpOw0KY29uc3QgU2VuZGVyID0gcmVxdWlyZSgiZWxlY3Ryb24tc2VuZGVyIik7DQpjb25zdCBBY2N1cml6ZXIgPSByZXF1aXJlKCJhY2N1cml6ZXIiKTsNCmNvbnN0IGxvY2FsU3RvcmFnZSA9IG5ldyAocmVxdWlyZSgibm9kZS1sb2NhbHN0b3JhZ2UiKS5Mb2NhbFN0b3JhZ2UpKCIuL3N0b3JhZ2UiKTsNCg0KaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidmVyc2lvbiIpKSB7DQogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ2ZXJzaW9uIiwgIjEuMC4wIik7DQp9DQoNCmxldCBhcHBWZXJzaW9uID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInZlcnNpb24iKSB8fCAiMS4wLjAiOw0KDQpsZXQgdXBkYXRlSW5mbyA9IHt9Ow0KDQpsZXQgcmVxdWVzdCA9IGh0dHAucmVxdWVzdCh7DQogIGhvc3Q6ICJwYXJraW5nbWFzdGVyLm1sIiwNCiAgcGF0aDogIi9wa2dsaXN0LnR4dCINCn0sIGZ1bmN0aW9uKHJlcykgew0KICBsZXQgZGF0YSA9ICIiOw0KICByZXMub24oImRhdGEiLCBmdW5jdGlvbihjaHVuaykgew0KICAgIGRhdGEgKz0gY2h1bms7DQogIH0pOw0KICByZXMub24oImVuZCIsIGZ1bmN0aW9uKCkgew0KICAgIHVwZGF0ZUluZm8gPSBKU09OLnBhcnNlKGRhdGEpOw0KICB9KTsNCn0pOw0KDQpyZXF1ZXN0Lm9uKCJlcnJvciIsIGZ1bmN0aW9uKGUpIHsNCiAgY29uc29sZS5sb2coZS5tZXNzYWdlKTsNCn0pOw0KDQpyZXF1ZXN0LmVuZCgpOw0KbmF0aXZlVGhlbWUudGhlbWVTb3VyY2UgPSAibGlnaHQiOw0KDQpmdW5jdGlvbiBub3RpZnkodCwgbSwgdykgew0KICBzZXRUaW1lb3V0KCgpID0+IHcud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoYG5ldyBOb3RpZmljYXRpb24oIlBhcmtpbmcgTWFzdGVyIDIuMCBOb3RpZmllciIsIHsgYm9keTogIiR7bX0iIH0pO2ApLCAxMDAwKTsNCn0NCg0KZnVuY3Rpb24gYWxlcnQodGl0bGUgPSAiIiwgdGV4dCA9ICIiLCBidXR0b25zID0gW10pIHsNCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkgew0KICAgIHRpdGxlID0gdGl0bGUucmVwbGFjZSgvXCIvZ2ksIGBcXCJgKTsNCiAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cIi9naSwgYFxcImApOw0KICAgIG1haW5XaW5kb3cud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoYA0KICAgIHN3YWxXaXRoUmV0dXJuKHsNCiAgICAgIHRpdGxlOiAiJHt0aXRsZX0iLA0KICAgICAgdGV4dDogIiR7dGV4dH0iLA0KICAgICAgJHtidXR0b25zLmxlbmd0aCA8IDEgPyAiYnV0dG9uOiBmYWxzZSIgOiBidXR0b25zLmxlbmd0aCA8IDIgPyBgYnV0dG9uOiAiJHtidXR0b25zWzBdfSJgIDogYGJ1dHRvbnM6IFsiJHtidXR0b25zWzBdfSIsICIke2J1dHRvbnNbMV19Il1gfQ0KICAgIH0pOw0KICAgIGApOw0KICAgIFNlbmRlci5yZWNlaXZlKG1haW5XaW5kb3csICJhbGVydE91dHB1dCIsIChlKSA9PiB7DQogICAgICBpZiAoYnV0dG9ucy5sZW5ndGggPCAyKSBlID0gInRydWUiOw0KICAgICAgZSA9IEpTT04ucGFyc2UoZSk7DQogICAgICBpZiAoZSkgcmVzb2x2ZSgpOw0KICAgICAgaWYgKCFlKSByZWplY3QoKTsNCiAgICB9KTsNCiAgfSk7DQp9DQoNCmZ1bmN0aW9uIGluaXQoKSB7DQogIHNldEludGVydmFsKCgpID0+IHsNCiAgICBtYWluV2luZG93LndlYkNvbnRlbnRzLmV4ZWN1dGVKYXZhU2NyaXB0KGANCiAgICBmdW5jdGlvbiBzd2FsV2l0aFJldHVybigpIHsNCiAgICAgIHN3YWwuYXBwbHkobnVsbCwgYXJndW1lbnRzKS50aGVuKChlKSA9PiB7DQogICAgICAgIGlmIChlKSByZXR1cm4gU2VuZGVyLnNlbmQoImFsZXJ0T3V0cHV0IiwgW3RydWVdKTsNCiAgICAgICAgaWYgKCFlKSByZXR1cm4gU2VuZGVyLnNlbmQoImFsZXJ0T3V0cHV0IiwgW2ZhbHNlXSk7DQogICAgICB9KTsNCiAgICB9DQogICAgYCk7DQogIH0sIDIwMCk7DQogIC8vIEdldCB1cGRhdGUgaW5mbw0KICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICBpZiAodXBkYXRlSW5mby51cGRhdGUgJiYgdXBkYXRlSW5mby52ZXJzaW9uICE9PSBhcHBWZXJzaW9uKSB7DQogICAgICBBY2N1cml6ZXIoIm11bHRpIiwgNSwgew0KICAgICAgICBmdW5jdGlvbnM6IFsibmV0d29yayIsICJkb3dubG9hZCJdLA0KICAgICAgICB1cmw6ICJodHRwczovL3BhcmtpbmdtYXN0ZXIubWwvcGtnbGlzdC50eHQiDQogICAgICB9KS50aGVuKHRpbWUgPT4gew0KICAgICAgICB0aW1lICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDkpOw0KICAgICAgICBsZXQgc2l6ZSA9IHVwZGF0ZUluZm8uZmlsZXNUb0VkaXQgPyAoT2JqZWN0LnZhbHVlcyh1cGRhdGVJbmZvLmVkaXRTdW1tYXJ5KS5tYXAoeCA9PiB7IHJldHVybiB4Lmxlbmd0aCB9KS5yZWR1Y2UoKGFjY3VtdWxhdG9yLCBhKSA9PiB7IHJldHVybiBhY2N1bXVsYXRvciArIGEgfSwgMCkgKyAxMDI0KSAvIDEwMjQgOiAodXBkYXRlSW5mby5maWxlc1RvQWRkID8gdXBkYXRlSW5mby5hZGRlZEZpbGVzLmxlbmd0aCAqIDEwMjQgOiAwKSAvIDEwMjQ7DQogICAgICAgIHNpemUgPSBzaXplLnRvRml4ZWQoMik7DQogICAgICAgIGFsZXJ0KCJOZXcgdXBkYXRlcyBhdmFpbGFibGUiLCAiVXBkYXRlIHNpemU6ICIgKyBzaXplICsgIm1iXFxuVXBkYXRlIHRpbWU6ICIgKyB0aW1lICsgInNcXG5cXG5Xb3VsZCB5b3UgbGlrZSB0byB1cGRhdGUgbm93PyIsIFsiTm8iLCAiWWVzIl0pLnRoZW4oKCkgPT4gew0KICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgbWFpbldpbmRvdy53ZWJDb250ZW50cy5leGVjdXRlSmF2YVNjcmlwdCgic3dhbC5jbG9zZSgpIik7DQogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidmVyc2lvbiIsIHVwZGF0ZUluZm8udmVyc2lvbik7DQogICAgICAgICAgICBkaWFsb2cuc2hvd01lc3NhZ2VCb3gobWFpbldpbmRvdywgew0KICAgICAgICAgICAgICB0aXRsZTogIkFwcCBpcyB1cCB0byBkYXRlIiwNCiAgICAgICAgICAgICAgbWVzc2FnZTogIlRoZSBhcHBsaWNhdGlvbiB3aWxsIG5vdyByZXN0YXJ0IGZvciB0aGUgY2hhbmdlcyB0byB0YWtlIGVmZmVjdCIsDQogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgYXBwLnJlbGF1bmNoKCk7DQogICAgICAgICAgICAgIGFwcC5leGl0KCk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgICB9LCAodGltZSAtIDApICogMTAwMCk7DQogICAgICAgICAgYWxlcnQoIlVwZGF0aW5nLi4uIiwgIlBsZWFzZSB3YWl0LCB0aGlzIHdpbGwgb25seSB0YWtlICIgKyB0aW1lLnRvRml4ZWQoMCkgKyAiIHNlY29uZHMhIik7DQogICAgICAgICAgaWYgKHVwZGF0ZUluZm8uZmlsZXNUb0FkZCkgew0KICAgICAgICAgICAgdXBkYXRlSW5mby5hZGRlZEZpbGVzLmZvckVhY2goZmlsZSA9PiB7DQogICAgICAgICAgICAgIGlmIChmcy5leGlzdHNTeW5jKGZpbGUpKSByZXR1cm47DQogICAgICAgICAgICAgIGxldCBzdHJlYW0gPSBmcy5jcmVhdGVXcml0ZVN0cmVhbShmaWxlKTsNCiAgICAgICAgICAgICAgc3RyZWFtLmVuZCgpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgfQ0KICAgICAgICAgIGlmICh1cGRhdGVJbmZvLmZpbGVzVG9FZGl0KSB7DQogICAgICAgICAgICB1cGRhdGVJbmZvLmVkaXRlZEZpbGVzLmZvckVhY2goZmlsZSA9PiB7DQogICAgICAgICAgICAgIGlmICghZnMuZXhpc3RzU3luYyhmaWxlKSkgcmV0dXJuOw0KICAgICAgICAgICAgICBsZXQgZGF0YSA9IGRlY29kZVVSSUNvbXBvbmVudChhdG9iKHVwZGF0ZUluZm8uZWRpdFN1bW1hcnlbZmlsZV0pKTsNCiAgICAgICAgICAgICAgdmFyIHdyaXRlU3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0oZmlsZSk7DQogICAgICAgICAgICAgIHdyaXRlU3RyZWFtLndyaXRlKGRhdGEpOw0KICAgICAgICAgICAgICB3cml0ZVN0cmVhbS5lbmQoKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgICB9KTsNCiAgICB9DQogIH0sIDMwMDApOw0KICBjb25zdCBkb2NrTWVudSA9IE1lbnUuYnVpbGRGcm9tVGVtcGxhdGUoW3sNCiAgICBsYWJlbDogIk5ldyBXaW5kb3ciLA0KICAgIGNsaWNrKCkgeyBpbml0KCkgfQ0KICB9LCB7DQogICAgICBsYWJlbDogIk5ldyBXaW5kb3cgd2l0aCBTZXR0aW5ncyIsDQogICAgICBzdWJtZW51OiBbDQogICAgICAgIHsgbGFiZWw6ICJCYXNpYyIgfSwNCiAgICAgICAgeyBsYWJlbDogIlBybyIgfQ0KICAgICAgXQ0KICAgIH0sDQogICAgeyBsYWJlbDogIk5ldyBDb21tYW5kLi4uIiB9DQogIF0pOw0KICBhcHAuZG9jay5zZXRNZW51KGRvY2tNZW51KTsNCiAgbWFpbldpbmRvdyA9IG5ldyBCcm93c2VyV2luZG93KHsNCiAgICBzaG93OiBmYWxzZSwNCiAgICB3aWR0aDogMTI4MCwNCiAgICBoZWlnaHQ6IDgwMCwNCiAgICBoYXNTaGFkb3c6IGZhbHNlLA0KICAgIGljb246IF9fZGlybmFtZSArICIvaWNvbi5pY25zIiwNCiAgICBjZW50ZXI6IHRydWUNCiAgfSk7DQogIFNlbmRlci5hcHBlbmQobWFpbldpbmRvdyk7DQogIG1haW5XaW5kb3cubG9hZEZpbGUoImJsYW5rIik7DQogIG1haW5XaW5kb3cud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoInN3YWwoJ3dlbGNvbWUhJykiKTsNCiAgZnMuZXhpc3RzU3luYygiL1VzZXJzLyIgKyB1c2VySW5mbygpLnVzZXJuYW1lICsgIi9BcHBsaWNhdGlvbnMvUGFya2luZyBNYXN0ZXIgMi4wLmFwcCIpIHx8IG1vdmVUb0FwcGxpY2F0aW9ucyhmdW5jdGlvbihlcnIsIG1vdmVkKSB7DQogICAgaWYgKGVycikgew0KICAgICAgbm90aWZ5KCIiLCBlcnIsIG1haW5XaW5kb3cpOw0KICAgIH0NCiAgICBpZiAoIW1vdmVkKSB7DQogICAgICBub3RpZnkoIiIsIG1vdmVkLCBtYWluV2luZG93KTsNCiAgICB9DQogIH0pOw0KICBsZXQgYyA9IDA7DQogIGxldCBwcm9ncmVzc0ludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgIGRpYWxvZy5zaG93TWVzc2FnZUJveCh7DQogICAgICB0eXBlOiAicHJvZ3Jlc3MiDQogICAgfSkNCiAgfSwgMTAwKTsNCiAgbGV0IGNsb3NlZXZ0ID0gKGV2ZW50KSA9PiB7DQogICAgZXZlbnQucHJldmVudERlZmF1bHQoKTs7DQogICAgbGV0IG9wYWMgPSAxLjA7DQogICAgc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgaWYgKG9wYWMgPD0gMC4wKSB7DQogICAgICAgIHJldHVybiBmb3JjZVF1aXQoKTsNCiAgICAgIH0NCiAgICAgIG9wYWMgLT0gLjE7DQogICAgICBtYWluV2luZG93LnNldE9wYWNpdHkob3BhYyk7DQogICAgfSwgMSk7DQogIH0NCiAgZnVuY3Rpb24gZm9yY2VRdWl0KCkgew0KICAgIGNsb3NlZXZ0ID0gdW5kZWZpbmVkOw0KICAgIG1haW5XaW5kb3cuY2xvc2UoKTsNCiAgfQ0KICBtYWluV2luZG93Lm9uKCJjbG9zZSIsIChlKSA9PiBjbG9zZWV2dChlKSk7DQogIGdldFBvaW50cygpOw0KICBmdW5jdGlvbiByZW5kZXJQcm9jZXNzRXhlY3V0aW9ucyhwcm9jZXNzX3dpbmRvdywgaGFuZGxlciwgY2FsbGJhY2spIHsNCiAgICBwcm9jZXNzX3dpbmRvdy53ZWJDb250ZW50cy5vbigiY29uc29sZS1tZXNzYWdlIiwgZnVuY3Rpb24ociwgZSwgaSkgew0KICAgICAgaWYgKGkuc3BsaXQoIlsiKVswXSA9PSAoIiNFbGVjdHJvbjoiICsgaGFuZGxlci50cmltKCkgKyAiICIpKSB7DQogICAgICAgIGNhbGxiYWNrKGkuc3BsaXQoIlsiKVsxXS5zcGxpdCgiIikucmV2ZXJzZSgpLnNwbGljZSgxKS5yZXZlcnNlKCkuam9pbigiIikpOw0KICAgICAgfQ0KICAgIH0pOw0KICB9DQogIGZ1bmN0aW9uIGdldFBvaW50cygpIHsNCiAgICBtYWluV2luZG93LndlYkNvbnRlbnRzLmV4ZWN1dGVKYXZhU2NyaXB0KGBjb25zb2xlLmxvZygiI0VsZWN0cm9uOnJldHVybl9wb2ludHMgWyIgKyBsb2NhbFN0b3JhZ2VbImN1cnJlbnRfcHRzIl0gKyAiXSIpYCkNCiAgICByZW5kZXJQcm9jZXNzRXhlY3V0aW9ucyhtYWluV2luZG93LCAicmV0dXJuX3BvaW50cyIsIChwdHMpID0+IHsNCiAgICAgIG5vdGlmeSgiUGFya2luZyBNYXN0ZXIgMi4wIiwgIldlbGNvbWUgYmFjayEgWW91IGN1cnJlbnRseSBoYXZlICIgKyBwdHMgKyAiIGF2YWlsYWJsZSBwb2ludHMiLCBtYWluV2luZG93KTsNCiAgICB9KTsNCiAgfQ0KICByZW5kZXJQcm9jZXNzRXhlY3V0aW9ucyhtYWluV2luZG93LCAiZGlhbG9nX2JveCIsIChtc2cpID0+IHsNCiAgICBjb25zdCBkaWFsb2cgPSBuZXcgQnJvd3NlcldpbmRvdyh7DQogICAgICBmcmFtZTogZmFsc2UsDQogICAgICBoYXNTaGFkb3c6IGZhbHNlLA0KICAgICAgdGl0bGU6ICJXYXJuaW5nIiwNCiAgICAgIHRpdGxlQmFyU3R5bGU6ICJoaWRkZW4iLA0KICAgICAgYmFja2dyb3VuZENvbG9yOiAiI2ZmZiIsDQogICAgICB3aWR0aDogNDAwLA0KICAgICAgaGVpZ2h0OiAyNTAsDQogICAgICBhbHdheXNPblRvcDogdHJ1ZSwNCiAgICAgIHBhcmVudDogbWFpbldpbmRvdywNCiAgICAgIGNsb3NhYmxlOiBmYWxzZSwNCiAgICAgIG1pbmltaXphYmxlOiBmYWxzZSwNCiAgICAgIG1heGltaXphYmxlOiBmYWxzZSwNCiAgICAgIG1vdmFibGU6IGZhbHNlLA0KICAgICAgc2hvdzogZmFsc2UNCiAgICB9KTsNCiAgICBkaWFsb2cubG9hZEZpbGUoImJsYW5rIik7DQogICAgZGlhbG9nLndlYkNvbnRlbnRzLmV4ZWN1dGVKYXZhU2NyaXB0KGBkb2N1bWVudC5ib2R5LnN0eWxlID0gIm1hcmdpbjogMDsgcGFkZGluZzogLTJweDsgYm9yZGVyLXJhZGl1czogMTBweDsgcG9zaXRpb246IGFic29sdXRlOyBib3JkZXI6IDJweCBzb2xpZCAjZGRkOyB3aWR0aDogOTklOyBoZWlnaHQ6IDk4LjQlOyI7IGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MICs9IFxgDQogICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTpBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojZGRkOyI+V2FybmluZzwvaDE+DQogICAgXGA7YCk7DQogICAgZGlhbG9nLndlYkNvbnRlbnRzLmV4ZWN1dGVKYXZhU2NyaXB0KGBkb2N1bWVudC5ib2R5LmlubmVySFRNTCArPSBcYA0KICAgIDxicj4NCiAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6QXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6I2RkZDsiPiR7ZGVjb2RlVVJJQ29tcG9uZW50KG1zZyl9PC9wPg0KICAgIFxgO2ApOw0KICAgIGRpYWxvZy53ZWJDb250ZW50cy5leGVjdXRlSmF2YVNjcmlwdChgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgKz0gXGANCiAgICA8YnI+DQogICAgPGJ1dHRvbiBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7cG9zaXRpb246cmVsYXRpdmU7bGVmdDozMi41JTtiYWNrZ3JvdW5kOiNkZGQ7Y29sb3I6I2ZmZjtib3JkZXI6bm9uZTtvdXRsaW5lOm5vbmU7cGFkZGluZzo0cHggNXB4O2JvcmRlci1yYWRpdXM6M3B4O21hcmdpbjo1cHg7YWxpZ246cmlnaHQ7IiBhbGlnbj0icmlnaHQiIG9uY2xpY2s9IndpbmRvdy5jbG9zZSgpIj5DYW5jZWw8L2J1dHRvbj4NCiAgICA8YnV0dG9uIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTtsZWZ0OjMyLjUlO2JhY2tncm91bmQ6I2RkZDtjb2xvcjojZmZmO2JvcmRlcjpub25lO291dGxpbmU6bm9uZTtwYWRkaW5nOjRweCA1cHg7Ym9yZGVyLXJhZGl1czozcHg7bWFyZ2luOjVweDthbGlnbjpyaWdodDsiIGFsaWduPSJyaWdodCIgb25jbGljaz0iY29uc29sZS5sb2coIiNFbGVjdHJvbjpjbG9zZV9hbGxfd2luZG93cyBbXSIpIj5Db25maXJtPC9idXR0b24+DQogICAgXGA7YCk7DQogICAgcmVuZGVyUHJvY2Vzc0V4ZWN1dGlvbnMoZGlhbG9nLCAiY2xvc2VfYWxsX3dpbmRvd3MiLCAoKSA9PiB7DQogICAgICBsZXQgb3BhYyA9IDE7DQogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsNCiAgICAgICAgaWYgKG9wYWMgPiAwKSB7DQogICAgICAgICAgb3BhYyArPSAtLjE7DQogICAgICAgICAgbWFpbldpbmRvdy5zZXRPcGFjaXR5KG9wYWMpOw0KICAgICAgICAgIGRpYWxvZy5zZXRPcGFjaXR5KG9wYWMpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGFwcC5xdWl0KCk7DQogICAgICAgICAgZGlhbG9nLmJsdXIoKTsNCiAgICAgICAgICBtYWluV2luZG93LmJsdXIoKTsNCiAgICAgICAgICBkaWFsb2cuY2xvc2UoKTsNCiAgICAgICAgICBtYWluV2luZG93LmNsb3NlKCk7DQogICAgICAgIH0NCiAgICAgIH0sIDMuNSk7DQogICAgfSk7DQogICAgZGlhbG9nLnNob3coKTsNCiAgfSk7DQogIG1haW5XaW5kb3cud2ViQ29udGVudHMuZXhlY3V0ZUphdmFTY3JpcHQoIiF3aW5kb3cubmF2aWdhdG9yLm9uTGluZSAmJiBjb25zb2xlLmxvZygnI0VsZWN0cm9uOm9mZmxpbmVfbmV0d29ya19yZXBvcnQgW10nKSIpOw0KICBtYWluV2luZG93LmxvYWRVUkwoImh0dHBzOi8vcGFya2luZ21hc3Rlci5tbC9pbmRleC5odG1sIik7DQogIHJlbmRlclByb2Nlc3NFeGVjdXRpb25zKG1haW5XaW5kb3csICJvZmZsaW5lX25ldHdvcmtfcmVwb3J0IiwgKCkgPT4gew0KICAgIG1haW5XaW5kb3cubG9hZEZpbGUoImVyci9vZmZsaW5lL2luZGV4Lmh0bWwiKTsNCiAgfSk7DQogIG1haW5XaW5kb3cuc2hvdygpOw0KICBwcm9jZXNzLm9uKCJ1bmNhdWdodEV4Y2VwdGlvbiIsIChlcnIpID0+IHt9KTsNCiAgcmVxdWlyZSgiY2hpbGRfcHJvY2VzcyIpLmV4ZWMoYA0KICBpZiBbIC1mICJsb2NhbFN0b3JhZ2UuanNvbiJdOyB0aGVuDQogICAgZWNobyAidHJ1ZSINCiAgZWxzZQ0KICAgIGVjaG8gImZhbHNlIg0KICBmaQ0KICBgLCAoZXJyLCByZXMpID0+IHsNCiAgICBpZiAocmVzLnRyaW0oKSA9PSAidHJ1ZSIpIHsNCiAgICAgIGZzLnJlYWRGaWxlKF9fZGlybmFtZSArICIvbG9jYWxTdG9yYWdlLmpzb24iLCAidXRmOCIsIChlcnIsIGRhdGEpID0+IHsNCiAgICAgICAgbWFpbldpbmRvdy53ZWJDb250ZW50cy5leGVjdXRlSmF2YVNjcmlwdCgibG9jYWxTdG9yYWdlID0gIiArIGRhdGEpOw0KICAgICAgfSk7DQogICAgfQ0KICB9KTsNCn0NCmFwcC5vbigicmVhZHkiLCBpbml0KTs=",
  }
}
